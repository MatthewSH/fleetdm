{
  "versions": [
    {
      "version": "1.93.755983",
      "queries": {
        "exists": "SELECT 1 FROM apps WHERE bundle_identifier = 'com.logi.optionsplus';"
      },
      "installer_url": "https://download01.logi.com/web/ftp/pub/techsupport/optionsplus/logioptionsplus_installer.zip",
      "install_script_ref": "e7b82c7b",
      "uninstall_script_ref": "1a29443d",
      "sha256": "no_check",
      "default_categories": [
        "Productivity"
      ]
    }
  ],
  "refs": {
    "1a29443d": "#!/bin/sh\n\nquit_and_kill() {\n  b=\"$1\"\n  cu=\"$(stat -f \"%Su\" /dev/console 2\u003e/dev/null || true)\"\n\n  # Friendly quit if a GUI user is logged in\n  if osascript -e \"application id \\\"$b\\\" is running\" \u003e/dev/null 2\u003e\u00261; then\n    if [ \"$(id -u)\" -ne 0 ] || [ \"$cu\" != \"root\" ]; then\n      i=0\n      while [ \"$i\" -lt 10 ]; do\n        osascript -e \"tell application id \\\"$b\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n        if ! pgrep -f \"$b\" \u003e/dev/null 2\u003e\u00261; then break; fi\n        i=$((i+1))\n        sleep 1\n      done\n    fi\n  fi\n\n  # Hard kill by bundle id match and common names\n  pkill -f \"$b\" \u003e/dev/null 2\u003e\u00261 || true\n  pkill -f \"[Ll]ogi Options\\\\+\" \u003e/dev/null 2\u003e\u00261 || true\n  pkill -f \"logioptionsplus\" \u003e/dev/null 2\u003e\u00261 || true\n}\n\nremove_label_everywhere() {\n  l=\"$1\"\n  # system domain\n  launchctl bootout system \"$l\" \u003e/dev/null 2\u003e\u00261 || true\n  launchctl remove \"$l\" \u003e/dev/null 2\u003e\u00261 || true\n  # per-user GUI domains\n  if [ -d /Users ]; then\n    for uhome in /Users/*; do\n      [ -d \"$uhome\" ] || continue\n      uid=\"$(id -u \"$(basename \"$uhome\")\" 2\u003e/dev/null || true)\"\n      [ -n \"$uid\" ] || continue\n      launchctl bootout \"gui/$uid\" \"$l\" \u003e/dev/null 2\u003e\u00261 || true\n    done\n  fi\n  # remove plist files if present\n  rm -f \"/Library/LaunchAgents/$l.plist\" \"/Library/LaunchDaemons/$l.plist\" \u003e/dev/null 2\u003e\u00261 || true\n}\n\n# 1) Stop processes\nfor b in \\\n  com.logi.optionsplus \\\n  com.logi.optionsplus.driverhost \\\n  com.logi.optionsplus.updater \\\n  com.logi.cp-dev-mgr \\\n  com.logitech.FirmwareUpdateTool \\\n  com.logitech.logiaipromptbuilder\ndo\n  quit_and_kill \"$b\"\ndone\n\n# 2) Unload agents/daemons everywhere so nothing relaunches\nfor l in \\\n  com.logi.optionsplus \\\n  com.logi.optionsplus.updater \\\n  com.logi.cp-dev-mgr \\\n  com.logitech.LogiRightSight\ndo\n  remove_label_everywhere \"$l\"\ndone\n\n# 3) Remove the app bundle (handle both names)\nrm -rf \"/Applications/Logi Options+.app\" \\\n       \"/Applications/logioptionsplus.app\" \\\n       \"/Applications/Logi Options Plus.app\" \u003e/dev/null 2\u003e\u00261 || true\n\n# 4) System support and receipts\nrm -rf \"/Library/Application Support/Logitech/LogiOptionsPlus\" \\\n       \"/Library/Application Support/Logitech.localized/LogiOptionsPlus\" \\\n       \"/Library/Application Support/Logi Options+\" \u003e/dev/null 2\u003e\u00261 || true\nrmdir  \"/Library/Application Support/Logitech.localized\" \u003e/dev/null 2\u003e\u00261 || true\n\npkgutil --forget \"com.logitech.LogiRightSightForWebcams.pkg\" \u003e/dev/null 2\u003e\u00261 || true\nfor id in $(pkgutil --pkgs | grep -E '^com\\.logi(\\.|tech)' 2\u003e/dev/null); do\n  pkgutil --forget \"$id\" \u003e/dev/null 2\u003e\u00261 || true\ndone\n\n# 5) Shared folders\nrm -rf \"/Users/Shared/logi\" \"/Users/Shared/LogiOptionsPlus\" \u003e/dev/null 2\u003e\u00261 || true\n\n# 6) Per-user cleanup\nfor uhome in /Users/*; do\n  [ -d \"$uhome/Library\" ] || continue\n  rm -rf \"$uhome/Library/Application Support/LogiOptionsPlus\" \\\n         \"$uhome/Library/Saved Application State/com.logi.optionsplus.savedState\" \\\n         \"$uhome/Library/Caches/com.logi.optionsplus\" \u003e/dev/null 2\u003e\u00261 || true\n  rm -f  \"$uhome/Library/Preferences/com.logi.cp-dev-mgr.plist\" \\\n         \"$uhome/Library/Preferences/com.logi.optionsplus.driverhost.plist\" \\\n         \"$uhome/Library/Preferences/com.logi.optionsplus.plist\" \u003e/dev/null 2\u003e\u00261 || true\n  rm -f  \"$uhome/Library/Application Support/com.apple.sharedfilelist\"/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.logi.optionsplus*.sfl* \u003e/dev/null 2\u003e\u00261 || true\ndone\n\necho \"logi options+ uninstalled\"\n",
    "e7b82c7b": "#!/bin/sh\n\nquit_app() {\n  b=\"$1\"\n  if osascript -e \"application id \\\"$b\\\" is running\" \u003e/dev/null 2\u003e\u00261; then\n    cu=\"$(stat -f \"%Su\" /dev/console 2\u003e/dev/null || true)\"\n    if [ \"$(id -u)\" -eq 0 ] \u0026\u0026 [ \"$cu\" = \"root\" ]; then\n      return 0\n    fi\n    i=0\n    while [ \"$i\" -lt 10 ]; do\n      osascript -e \"tell application id \\\"$b\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n      if ! pgrep -f \"$b\" \u003e/dev/null 2\u003e\u00261; then\n        break\n      fi\n      i=$((i+1))\n      sleep 1\n    done\n  fi\n}\n\n[ -n \"$INSTALLER_PATH\" ] \u0026\u0026 [ -f \"$INSTALLER_PATH\" ] || { echo \"missing installer\"; exit 1; }\n\nquit_app \"com.logi.optionsplus\"\n\nTMPDIR=\"$(mktemp -d /tmp/logiopts_XXXXXX)\" || exit 1\nunzip -q \"$INSTALLER_PATH\" -d \"$TMPDIR\" || { echo \"unzip failed\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Try exact names first, then fallback search\nAPP_DIR=\"\"\n[ -d \"$TMPDIR/logioptionsplus_installer.app\" ] \u0026\u0026 APP_DIR=\"$TMPDIR/logioptionsplus_installer.app\"\n[ -z \"$APP_DIR\" ] \u0026\u0026 [ -d \"$TMPDIR/Logi Options+ Installer.app\" ] \u0026\u0026 APP_DIR=\"$TMPDIR/Logi Options+ Installer.app\"\nif [ -z \"$APP_DIR\" ]; then\n  APP_DIR=\"$(/usr/bin/find \"$TMPDIR\" -type d \\( \\\n    -iname \"logioptionsplus_installer.app\" -o \\\n    -iname \"Logi Options+ Installer.app\" -o \\\n    -iname \"logi*installer*.app\" -o \\\n    -iname \"options+*.app\" -o \\\n    -iname \"install*.app\" \\\n  \\) -print -quit)\"\nfi\n\n[ -n \"$APP_DIR\" ] \u0026\u0026 [ -d \"$APP_DIR\" ] || { echo \"installer app not found\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Binary path as in the cask\nBIN=\"$APP_DIR/Contents/MacOS/logioptionsplus_installer\"\nif [ ! -x \"$BIN\" ]; then\n  # Fallback: any executable in Contents/MacOS\n  BIN=\"$(/usr/bin/find \"$APP_DIR/Contents/MacOS\" -maxdepth 1 -type f -perm -111 -print -quit 2\u003e/dev/null)\"\nfi\n[ -n \"$BIN\" ] \u0026\u0026 [ -x \"$BIN\" ] || { echo \"installer binary not found\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Run quietly\n\"$BIN\" --quiet \u003e/dev/null 2\u003e\u00261 || { echo \"installer app failed\"; rm -rf \"$TMPDIR\"; exit 1; }\n\nrm -rf \"$TMPDIR\" \u003e/dev/null 2\u003e\u00261 || true\necho \"logi options+ installed\"\n"
  }
}