{
  "versions": [
    {
      "version": "1.93.755983",
      "queries": {
        "exists": "SELECT 1 FROM apps WHERE bundle_identifier = 'com.logi.optionsplus';"
      },
      "installer_url": "https://download01.logi.com/web/ftp/pub/techsupport/optionsplus/logioptionsplus_installer.zip",
      "install_script_ref": "e7b82c7b",
      "uninstall_script_ref": "564e1285",
      "sha256": "no_check",
      "default_categories": [
        "Productivity"
      ]
    }
  ],
  "refs": {
    "564e1285": "#!/bin/sh\n\nquit_application() {\n  local bundle_id=\"$1\"\n  local timeout_duration=10\n  if ! osascript -e \"application id \\\"$bundle_id\\\" is running\" \u003e/dev/null 2\u003e\u00261; then return; fi\n  local console_user; console_user=$(stat -f \"%Su\" /dev/console)\n  if [[ $EUID -eq 0 \u0026\u0026 \"$console_user\" == \"root\" ]]; then return; fi\n  SECONDS=0\n  while (( SECONDS \u003c timeout_duration )); do\n    osascript -e \"tell application id \\\"$bundle_id\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n    if ! pgrep -f \"$bundle_id\" \u003e/dev/null 2\u003e\u00261; then break; fi\n    sleep 1\n  done\n}\n\nquit_application \"com.logi.optionsplus\"\n\nrm -rf \"/Applications/Logi Options+.app\" \u003e/dev/null 2\u003e\u00261 || true\n\nrm -rf \"/Library/Application Support/Logitech/LogiOptionsPlus\" \\\n       \"/Library/Application Support/Logi Options+\" \u003e/dev/null 2\u003e\u00261 || true\nrm -f  \"/Library/Preferences/com.logi.optionsplus.plist\" \u003e/dev/null 2\u003e\u00261 || true\nrm -f  /var/db/receipts/com.logi.optionsplus*.{bom,plist} \u003e/dev/null 2\u003e\u00261 || true\n\nfor udir in /Users/* /var/root; do\n  [[ -d \"$udir/Library\" ]] || continue\n  rm -rf \"$udir/Library/Application Support/Logi Options+\" \\\n         \"$udir/Library/Application Support/Logitech/LogiOptionsPlus\" \\\n         \"$udir/Library/Caches/com.logi.optionsplus\" \\\n         \"$udir/Library/Logs/Logi Options+\" \u003e/dev/null 2\u003e\u00261 || true\n  rm -f  \"$udir/Library/Preferences/com.logi.optionsplus.plist\" \u003e/dev/null 2\u003e\u00261 || true\ndone\n\necho \"logi options+ uninstalled\"\n",
    "e7b82c7b": "#!/bin/sh\n\nquit_app() {\n  b=\"$1\"\n  if osascript -e \"application id \\\"$b\\\" is running\" \u003e/dev/null 2\u003e\u00261; then\n    cu=\"$(stat -f \"%Su\" /dev/console 2\u003e/dev/null || true)\"\n    if [ \"$(id -u)\" -eq 0 ] \u0026\u0026 [ \"$cu\" = \"root\" ]; then\n      return 0\n    fi\n    i=0\n    while [ \"$i\" -lt 10 ]; do\n      osascript -e \"tell application id \\\"$b\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n      if ! pgrep -f \"$b\" \u003e/dev/null 2\u003e\u00261; then\n        break\n      fi\n      i=$((i+1))\n      sleep 1\n    done\n  fi\n}\n\n[ -n \"$INSTALLER_PATH\" ] \u0026\u0026 [ -f \"$INSTALLER_PATH\" ] || { echo \"missing installer\"; exit 1; }\n\nquit_app \"com.logi.optionsplus\"\n\nTMPDIR=\"$(mktemp -d /tmp/logiopts_XXXXXX)\" || exit 1\nunzip -q \"$INSTALLER_PATH\" -d \"$TMPDIR\" || { echo \"unzip failed\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Try exact names first, then fallback search\nAPP_DIR=\"\"\n[ -d \"$TMPDIR/logioptionsplus_installer.app\" ] \u0026\u0026 APP_DIR=\"$TMPDIR/logioptionsplus_installer.app\"\n[ -z \"$APP_DIR\" ] \u0026\u0026 [ -d \"$TMPDIR/Logi Options+ Installer.app\" ] \u0026\u0026 APP_DIR=\"$TMPDIR/Logi Options+ Installer.app\"\nif [ -z \"$APP_DIR\" ]; then\n  APP_DIR=\"$(/usr/bin/find \"$TMPDIR\" -type d \\( \\\n    -iname \"logioptionsplus_installer.app\" -o \\\n    -iname \"Logi Options+ Installer.app\" -o \\\n    -iname \"logi*installer*.app\" -o \\\n    -iname \"options+*.app\" -o \\\n    -iname \"install*.app\" \\\n  \\) -print -quit)\"\nfi\n\n[ -n \"$APP_DIR\" ] \u0026\u0026 [ -d \"$APP_DIR\" ] || { echo \"installer app not found\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Binary path as in the cask\nBIN=\"$APP_DIR/Contents/MacOS/logioptionsplus_installer\"\nif [ ! -x \"$BIN\" ]; then\n  # Fallback: any executable in Contents/MacOS\n  BIN=\"$(/usr/bin/find \"$APP_DIR/Contents/MacOS\" -maxdepth 1 -type f -perm -111 -print -quit 2\u003e/dev/null)\"\nfi\n[ -n \"$BIN\" ] \u0026\u0026 [ -x \"$BIN\" ] || { echo \"installer binary not found\"; rm -rf \"$TMPDIR\"; exit 1; }\n\n# Run quietly\n\"$BIN\" --quiet \u003e/dev/null 2\u003e\u00261 || { echo \"installer app failed\"; rm -rf \"$TMPDIR\"; exit 1; }\n\nrm -rf \"$TMPDIR\" \u003e/dev/null 2\u003e\u00261 || true\necho \"logi options+ installed\"\n"
  }
}